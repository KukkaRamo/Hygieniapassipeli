package hygieniapeli;

/**
 *
 * @author Kukka
 */
public class BasePanel extends javax.swing.JPanel {
    final String FloorName="Lattia";
    final String TrashName="Roskakori";
    final String MouldName="Multa";
    final String ImportedName="Tuodut";   
    
    /**
     * Creates new form BasePanel
     */
    public BasePanel() {
        initComponents();
        initPlain(plainFoodStorageLattia, FloorName, true);
        initPlain(plainFoodStorageRoskakori, TrashName, true);
        initPlain(plainFoodStorageMulta, MouldName, false);
        initPlain(plainFoodStorageTuodut, ImportedName, true);
        javax.swing.JOptionPane.showMessageDialog(null, "Tämä on kokeiluversio.  Faktat vielä väärin, pelaaminen omalla vastuulla.","Varoitus",javax.swing.JOptionPane.ERROR_MESSAGE);
    }

    /**
     * Initializes some properties for a PlainFoodStorage-panel.
     * For now, only used by the constructor.
     * 
     * @param ppfs  The PlainFoodStorage panel to be initialized
     * @param pname The name for panel and foodlist and title for panels titled border
     * @param dragEnabled Whether drag is enabled in the panel
     */
    private void initPlain(PlainFoodStorage ppfs, String pname, boolean dragEnabled) {
        ppfs.setBorder(javax.swing.BorderFactory.createTitledBorder(pname));
        ppfs.setName(pname);
        ppfs.getJListFood().setName(pname);
        ppfs.getJListFood().setDragEnabled(dragEnabled);     
    }
    
    public void setGameController(GameController gc) {
        this.jPanelResults1.setController(gc);
    }
    
    public String getFloorName() { return FloorName; }
    public String getTrashName() { return TrashName; }
    public String getMouldName() { return MouldName; }
    public String getImportedName() { return ImportedName; }

    public JPanelResults getJPanelResults1() {return jPanelResults1;}
    public PlainFoodStorage getPlainFoodStorageRoskakori() {return plainFoodStorageRoskakori;}
    public PlainFoodStorage getPlainFoodStorageTuodut() {return plainFoodStorageTuodut;}
    
    /**
     * Updates value of a cell in the result table.
     * This is the only way to access the table.
     * 
     * @param pvalue  The new value for the result cell
     * @param prow The row of the result cell
     * @param pcolumn The column of the result cell
     */
    public void updateMyResult(int pvalue, int prow, int pcolumn) {
        this.jPanelResults1.getJTableResults().getModel().setValueAt(pvalue, prow, pcolumn);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelResults1 = new hygieniapeli.JPanelResults();
        plainFoodStorageRoskakori = new hygieniapeli.PlainFoodStorage();
        plainFoodStorageTuodut = new hygieniapeli.PlainFoodStorage();
        plainFoodStorageMulta = new hygieniapeli.PlainFoodStorage();
        plainFoodStorageLattia = new hygieniapeli.PlainFoodStorage();

        setName("BasePanel"); // NOI18N

        plainFoodStorageRoskakori.setName("Roskakori"); // NOI18N

        plainFoodStorageTuodut.setToolTipText("Tilatut ruoat saapuvat tänne");
        plainFoodStorageTuodut.setName("Tuodut"); // NOI18N

        plainFoodStorageMulta.setToolTipText("Kompostoi pilaantuneet ruoat tänne");
        plainFoodStorageMulta.setName("Multa"); // NOI18N

        plainFoodStorageLattia.setName("Lattia"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanelResults1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(plainFoodStorageRoskakori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(plainFoodStorageTuodut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(plainFoodStorageMulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(plainFoodStorageLattia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanelResults1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(plainFoodStorageRoskakori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(plainFoodStorageTuodut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(plainFoodStorageLattia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(plainFoodStorageMulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private hygieniapeli.JPanelResults jPanelResults1;
    private hygieniapeli.PlainFoodStorage plainFoodStorageLattia;
    private hygieniapeli.PlainFoodStorage plainFoodStorageMulta;
    private hygieniapeli.PlainFoodStorage plainFoodStorageRoskakori;
    private hygieniapeli.PlainFoodStorage plainFoodStorageTuodut;
    // End of variables declaration//GEN-END:variables
}
